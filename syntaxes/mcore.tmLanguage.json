{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "MCore",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#characters"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#storage"
    },
    {
      "include": "#entities"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.mcore",
          "match": "\\b(Lam|con|else|end|fix|if|in|lam|lang|let|match|recursive|sem|syn|then|type|use|with)\\b"
        },
        {
          "name": "keyword.operator.arithmetic.mcore",
          "match": "\\b(not|and|or|add|addi|subi|muli|leqi|divi|modi|negi|lti|gti|geqi|eqi|neqi|sub|mul|div|neg|negf|mulf|subf|addf|divf)\\b"
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "name": "entity.name.function.mcore",
          "match": "\\b(utest|mexpr|include|never)\\b"
        }
      ]
    },
    "comment": {
      "patterns": [
        { "include": "#comment-line" },
        { "include": "#comment-block" },
        { "include": "#comment-block-illegal" }
      ]
    },
    "comment-line": {
      "name": "comment.line.mcore",
      "begin": "--",
      "end": "\n"
    },
    "comment-block": {
      "name": "comment.block.mcore",
      "begin": "[/]-",
      "end": "-[/]",
      "patterns": [{ "include": "#comment-block" }]
    },
    "comment-block-illegal": {
      "name": "invalid.illegal.block.mcore",
      "match": "-[/]"
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.mcore",
          "match": "\\b(true|false|nop)\\b"
        },
        {
          "name": "constant.numeric.float.mcore",
          "match": "\\b(?i:(\\d+e[\\-\\+]?\\d+))"
        },
        {
          "name": "constant.numeric.integer.decimal.mcore",
          "match": "\\b([1-9]+[0-9]*|0)"
        }
      ]
    },
    "storage": {
      "patterns": [
        {
          "name": "storage.type.mcore",
          "match": "\\b(Int)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quote.double.mcore",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.mcore",
          "match": "\\\\."
        }
      ]
    },
    "characters": {
      "name": "string.quoted.single.mcore",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.mcore",
          "match": "\\\\."
        }
      ]
    },
    "brackets": {
      "name": "brackets.simple.mcore",
      "match": "\\b(Dfa)\\b"
    }
  },
  "scopeName": "source.mcore"
}
